Imports System.Web
Imports System.IO
Imports SSignal_Protocols
Imports SSignalDB
Imports SSignal_ServerCommonCode

Public Class 类_打开或创建数据库

    Const 常用数据缓存区大小_兆 As Integer = 100

    Public Function 打开或创建主数据库(ByVal Context As HttpContext, ByVal 副数据库 As 类_数据库) As 类_数据库
        Dim 目录路径 As String = Context.Server.MapPath("/") & "App_Data"
        If Directory.Exists(目录路径) = False Then Directory.CreateDirectory(目录路径)
        Dim 文件名 As String = "CenterData_RequireBackup"
        Dim 文件路径 As String = 目录路径 & "\" & 文件名 & 数据库文件扩展名
        Const 在副数据库独一无二的名称 As String = "主数据库"
        Dim 数据库 As 类_数据库 = Nothing
        Dim 数据库类型 As 数据库类型_常量集合 = 数据库类型_常量集合.长期_需备份
        Const 新页缓存文件长度限制_兆 As Integer = 50
        If File.Exists(文件路径) = True Then
            数据库 = New 类_数据库(文件路径, 数据库类型, , 副数据库, 在副数据库独一无二的名称)
            Try
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.读取, 新页缓存文件长度限制_兆)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        Else
            Try
                文件路径 = 创建数据库文件(目录路径, 文件名, 数据库类型, True)
                数据库 = New 类_数据库(文件路径, 数据库类型, , 副数据库, 在副数据库独一无二的名称)
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.不读取, 新页缓存文件长度限制_兆)
            Catch ex As Exception
                If 数据库 IsNot Nothing Then
                    数据库.关闭()
                    数据库 = Nothing
                End If
            End Try
        End If
        If 数据库 IsNot Nothing Then
            Try
                Call 创建表_用户(数据库)
                Call 创建表_服务器(数据库)
                Call 创建表_群主(数据库)
                Call 创建表_报表(数据库)
                Call 创建表_手机号更换(数据库)
                Call 创建表_电子邮箱地址更换(数据库)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        End If
        Return 数据库
    End Function

    Private Sub 创建表_用户(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "用户"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("停用", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("英语用户名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.英语用户名长度, 值许可_常量集合.可为空)
            If String.IsNullOrEmpty(域名_本国语) = False Then
                列添加器.添加列_用于创建表("本国语用户名", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.本国语用户名长度, 值许可_常量集合.可为空)
            End If
            列添加器.添加列_用于创建表("密码哈希值", 数据类型_常量集合.binary_字节数组, 长度_常量集合.哈希值字节数)
            列添加器.添加列_用于创建表("主机名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.主机名字符数, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("位置号", 数据类型_常量集合.smallint_短整数)
            列添加器.添加列_用于创建表("手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.可为空)    '支持中文
            列添加器.添加列_用于创建表("职能", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.职能字符串长度, 值许可_常量集合.可为空)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#英语用户名", True)
            索引.添加排序列("英语用户名")
            Dim 列添加器2 As New 类_列添加器
            列添加器2.添加列_用于筛选器("英语用户名", 筛选方式_常量集合.不为空, Nothing)
            Dim 筛选器 As New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            If String.IsNullOrEmpty(域名_本国语) = False Then
                索引 = New 类_索引("#本国语用户名", True)
                索引.添加排序列("本国语用户名")
                列添加器2 = New 类_列添加器
                列添加器2.添加列_用于筛选器("本国语用户名", 筛选方式_常量集合.不为空, Nothing)
                筛选器 = New 类_筛选器
                筛选器.添加一组筛选条件(列添加器2)
                索引.添加筛选器(筛选器)
                索引添加器.添加索引(索引)
            End If

            索引 = New 类_索引("#手机号", True)
            索引.添加排序列("手机号")
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("手机号", 筛选方式_常量集合.大于, 0)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#电子邮箱地址", True)
            索引.添加排序列("电子邮箱地址")
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("电子邮箱地址", 筛选方式_常量集合.不为空, Nothing)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#职能编号")
            索引.添加排序列("职能")
            索引.添加排序列("编号", True)
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("职能", 筛选方式_常量集合.不为空, Nothing)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#编号_已停用")
            索引.添加排序列("编号", True)
            列添加器2 = New 类_列添加器
            列添加器2.添加列_用于筛选器("停用", 筛选方式_常量集合.等于, True)
            筛选器 = New 类_筛选器
            筛选器.添加一组筛选条件(列添加器2)
            索引.添加筛选器(筛选器)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#主机名位置号", True)
            索引.添加排序列("主机名")
            索引.添加排序列("位置号")
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_服务器(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "服务器"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("主机名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.主机名字符数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("类别", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("网络地址", 数据类型_常量集合.binary_字节数组, 长度_常量集合.网络地址)
            列添加器.添加列_用于创建表("停用", 数据类型_常量集合.bit_位)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("统计", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#类别主机名", True)
            索引.添加排序列("类别")
            索引.添加排序列("主机名")
            索引.文字列_保存在索引中用于快速查询文字 = "主机名"
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#类别统计")
            索引.添加排序列("类别")
            索引.添加排序列("统计")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#类别时间")
            索引.添加排序列("类别")
            索引.添加排序列("时间")
            索引.文字列_保存在索引中用于快速查询文字 = "主机名"
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#类别网络地址", True)
            索引.添加排序列("类别")
            索引.添加排序列("网络地址")
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_群主(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "群主"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("用户编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("主机名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.主机名字符数)
            列添加器.添加列_用于创建表("群编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("群名称", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.群名称字符数)

            Dim 索引 As New 类_索引("#用户主机名群", True)
            索引.添加排序列("用户编号")
            索引.添加排序列("主机名")
            索引.添加排序列("群编号")

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_报表(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "报表"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("截止时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("内容", 数据类型_常量集合.ntext_双字节长文本)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#截止时间", True)
            索引.添加排序列("截止时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_手机号更换(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "手机号更换"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("原手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("新手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#原手机号时间")
            索引.添加排序列("原手机号")
            索引.添加排序列("时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_电子邮箱地址更换(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "电子邮箱地址更换"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("原电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("新电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#原电子邮箱地址时间")
            索引.添加排序列("原电子邮箱地址")
            索引.添加排序列("时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub


    Public Function 打开或创建副数据库(ByVal Context As HttpContext) As 类_数据库
        Dim 目录路径 As String = Context.Server.MapPath("/") & "App_Data"
        If Directory.Exists(目录路径) = False Then Directory.CreateDirectory(目录路径)
        Dim 文件名 As String = "CenterData_NoBackup"
        Dim 文件路径 As String = 目录路径 & "\" & 文件名 & 数据库文件扩展名
        Dim 数据库 As 类_数据库 = Nothing
        Dim 数据库类型 As 数据库类型_常量集合 = 数据库类型_常量集合.长期_无需备份
        Const 新页缓存文件长度限制_兆 As Integer = 100
        If File.Exists(文件路径) = True Then
            数据库 = New 类_数据库(文件路径, 数据库类型)
            Try
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.读取, 新页缓存文件长度限制_兆)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        Else
            Try
                文件路径 = 创建数据库文件(目录路径, 文件名, 数据库类型, True)
                数据库 = New 类_数据库(文件路径, 数据库类型)
                数据库.打开(常用数据缓存区大小_兆, 类_数据库.新页缓存文件的处理方式_常量集合.不读取, 新页缓存文件长度限制_兆)
            Catch ex As Exception
                If 数据库 IsNot Nothing Then
                    数据库.关闭()
                    数据库 = Nothing
                End If
            End Try
        End If
        If 数据库 IsNot Nothing Then
            Try
                Dim 类 As New 类_创建共有的表
                Call 类.创建表_服务器(数据库)
                Call 类.创建表_系统任务(数据库)
                Call 创建表_验证码(数据库)
                Call 创建表_用户_副(数据库)
                Call 创建表_操作记录(数据库)
                Call 创建表_服务器故障(数据库)
                Call 创建表_短信发送(数据库)
                Call 创建表_邮件发送(数据库)
                Call 创建表_手机号更换_副(数据库)
                Call 创建表_电子邮箱地址更换_副(数据库)
                Call 创建表_可注册者(数据库)
                Call 创建表_正在注册的用户(数据库)
            Catch ex As Exception
                数据库.关闭()
                数据库 = Nothing
            End Try
        End If
        Return 数据库
    End Function

    Private Sub 创建表_验证码(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "验证码"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("随机字符串", 数据类型_常量集合.char_单字节定长短文本, 长度_常量集合.验证码)
            列添加器.添加列_用于创建表("手机号或电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("网络地址", 数据类型_常量集合.binary_字节数组, 长度_常量集合.网络地址)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#时间随机字符串", True)
            索引.添加排序列("时间")
            索引.添加排序列("随机字符串")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#网络地址时间")
            索引.添加排序列("网络地址")
            索引.添加排序列("时间")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#手机邮箱时间")
            索引.添加排序列("手机号或电子邮箱地址")
            索引.添加排序列("时间")
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_用户_副(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "用户"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("编号", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("连接凭据_电脑", 数据类型_常量集合.char_单字节定长短文本, 长度_常量集合.连接凭据_客户端, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("连接凭据_手机", 数据类型_常量集合.char_单字节定长短文本, 长度_常量集合.连接凭据_客户端, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("登录时间_电脑", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("登录时间_手机", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("网络地址_电脑", 数据类型_常量集合.binary_字节数组, 长度_常量集合.网络地址, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("网络地址_手机", 数据类型_常量集合.binary_字节数组, 长度_常量集合.网络地址, 值许可_常量集合.可为空)
            列添加器.添加列_用于创建表("登录错误次数_电脑", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("登录错误次数_手机", 数据类型_常量集合.tinyint_字节)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_操作记录(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "操作记录"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("用户编号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("操作代码", 数据类型_常量集合.tinyint_字节)
            列添加器.添加列_用于创建表("网络地址", 数据类型_常量集合.binary_字节数组, 长度_常量集合.网络地址)
            列添加器.添加列_用于创建表("操作时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#操作时间")
            索引.添加排序列("操作时间", True)
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#用户编号操作时间")
            索引.添加排序列("用户编号")
            索引.添加排序列("操作时间", True)
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_服务器故障(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "服务器故障"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("主机名", 数据类型_常量集合.varchar_单字节变长短文本, 最大值_常量集合.主机名字符数)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("故障信息", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.服务器故障信息长度)

            Dim 索引 As New 类_索引("#主机名时间")
            索引.添加排序列("主机名")
            索引.添加排序列("时间", True)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_短信发送(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "短信发送"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("内容", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.短信文字长度)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_邮件发送(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "邮件发送"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("收件人", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("标题", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.电子邮件标题长度)
            列添加器.添加列_用于创建表("正文", 数据类型_常量集合.ntext_双字节长文本)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_手机号更换_副(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "手机号更换"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("原手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("新手机号", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_电子邮箱地址更换_副(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "电子邮箱地址更换"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("原电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("新电子邮箱地址", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_可注册者(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "可注册者"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("邮箱或手机号", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度, 值许可_常量集合.是主键_升序)
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)

            Dim 索引 As New 类_索引("#时间")
            索引.添加排序列("时间")

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引)
            指令.执行()
        End If
    End Sub

    Private Sub 创建表_正在注册的用户(ByVal 数据库 As 类_数据库)
        Const 表名 As String = "正在注册的用户"
        Dim 指令2 As New 类_数据库指令_查找表(数据库, 表名)
        If 指令2.执行 Is Nothing Then
            Dim 列添加器 As New 类_列添加器
            列添加器.添加列_用于创建表("时间", 数据类型_常量集合.bigint_长整数)
            列添加器.添加列_用于创建表("验证码", 数据类型_常量集合.char_单字节定长短文本, 长度_常量集合.验证码)
            列添加器.添加列_用于创建表("邮箱或手机号", 数据类型_常量集合.nvarchar_双字节变长短文本, 最大值_常量集合.讯宝和电子邮箱地址长度)
            列添加器.添加列_用于创建表("密码哈希值", 数据类型_常量集合.binary_字节数组, 长度_常量集合.哈希值字节数)
            列添加器.添加列_用于创建表("验证通过", 数据类型_常量集合.bit_位)

            Dim 索引添加器 As New 类_索引添加器

            Dim 索引 As New 类_索引("#时间")
            索引.添加排序列("时间")
            索引添加器.添加索引(索引)

            索引 = New 类_索引("#时间验证码", True)
            索引.添加排序列("时间")
            索引.添加排序列("验证码")
            索引添加器.添加索引(索引)

            Dim 指令 As New 类_数据库指令_创建表(数据库, 表名, 列添加器, 索引添加器)
            指令.执行()
        End If
    End Sub

End Class
